apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      # --- Node Exporter (HTTP) ---
      # Discovers node-exporter pods in 'monitoring' namespace via HTTP
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
              - monitoring
        scheme: http
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
            action: keep
            regex: node-exporter
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: http # Matches port name in DS/SVC
          - source_labels: [__meta_kubernetes_pod_ip, __meta_kubernetes_pod_container_port_number]
            regex: (.+);(.+)
            target_label: __address__
            replacement: ${1}:${2}
            action: replace
          - source_labels: [__meta_kubernetes_pod_node_name]
            target_label: instance
            action: replace

      # --- Nginx Exporter ---
      # Discovers nginx-prometheus-exporter sidecars
      - job_name: 'nginx'
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
              - default
        scheme: http
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: nginx
          - source_labels: [__meta_kubernetes_pod_container_port_number]
            action: keep
            regex: 9113 # Assumed exporter port
          - source_labels: [__meta_kubernetes_pod_ip]
            regex: (.+)
            target_label: __address__
            replacement: ${1}:9113 # Use PodIP:ExporterPort
            action: replace
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod_name

      # --- Kubernetes API Servers ---
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # --- Kubernetes Nodes (cAdvisor via API Proxy) ---
      - job_name: 'kubernetes-nodes-cadvisor'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc.cluster.local:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

      # --- Kubernetes Pods (Annotation-based discovery) ---
      # Scrapes any pod with 'prometheus.io/scrape: true' annotation
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      # --- Kube State Metrics (via RBAC Proxy) ---
      # Discovers kube-state-metrics endpoints in 'kube-system' via HTTPS proxy
      - job_name: 'kube-state-metrics'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
              - kube-system
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
            action: keep
            regex: kube-state-metrics
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: https-main # Port 8443 exposed by proxy
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+) # Use pod labels if available via endpoint role
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_service_name]
            target_label: service

      # --- Argo CD Metrics ---
      # ASSUMPTIONS: Argo runs in 'argocd' ns, uses standard labels, metrics on HTTP /metrics
      - job_name: 'argocd-server-metrics'
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
              - argocd
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
            action: keep
            regex: argocd-server
          - source_labels: [__meta_kubernetes_pod_container_port_number]
            action: keep
            regex: 8083 # Assumed metrics port
          - source_labels: [__meta_kubernetes_pod_ip, __meta_kubernetes_pod_container_port_number]
            action: replace
            regex: (.+);(.+)
            target_label: __address__
            replacement: ${1}:${2}
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod_name

      - job_name: 'argocd-repo-server-metrics'
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
              - argocd
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
            action: keep
            regex: argocd-repo-server
          - source_labels: [__meta_kubernetes_pod_container_port_number]
            action: keep
            regex: 8081 # metrics port
          - source_labels: [__meta_kubernetes_pod_ip, __meta_kubernetes_pod_container_port_number]
            action: replace
            regex: (.+);(.+)
            target_label: __address__
            replacement: ${1}:${2}
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod_name

      - job_name: 'argocd-application-controller-metrics'
        kubernetes_sd_configs:
        - role: pod
          namespaces:
            names:
              - argocd
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
            action: keep
            regex: argocd-application-controller
          - source_labels: [__meta_kubernetes_pod_container_port_number]
            action: keep
            regex: 8082 # metrics port
          - source_labels: [__meta_kubernetes_pod_ip, __meta_kubernetes_pod_container_port_number]
            action: replace
            regex: (.+);(.+)
            target_label: __address__
            replacement: ${1}:${2}
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod_name