- hosts: localhost
  gather_facts: false
  connection: local
  become: false

  collections:
  - community.kubernetes

  tasks:
  - name: Add Argo Helm repository
    kubernetes.core.helm_repository:
      name: argo
      repo_url: https://argoproj.github.io/argo-helm

  - name: Install Argo CD
    kubernetes.core.helm:
      name: argocd
      chart_ref: argo/argo-cd
      release_namespace: argocd
      create_namespace: false 
      wait: true
      wait_timeout: 300s
      chart_version: "5.16.0"
      values:
        server:
          container:
            image:
              repository: argoproj/argocd-server
              tag: v2.9.3 
          extraArgs:
            - --insecure # For lab only; use TLS in production!

  - name: Wait for Argo CD API server to become ready
    kubernetes.core.k8s_info:
      api_version: v1
      kind: deployment # changed from pod t odeployment for test
      namespace: argocd
      name: argocd-server
      wait: yes
      wait_timeout: 300
      wait_condition:
        type: Ready
        status: "True"
    when:
      - "'kubernetes' in lookup('pipe', 'pip list')"


  - name: Get Argo CD initial admin password
    ansible.builtin.command:
      cmd: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}"
    register: argocd_admin_password_encoded
    changed_when: false

  - name: Decode the password
    ansible.builtin.set_fact:
      argocd_admin_password: "{{ argocd_admin_password_encoded.stdout | b64decode }}"

  - name: Print Argo CD initial admin password
    ansible.builtin.debug:
      msg: "Argo CD initial admin password: {{ argocd_admin_password }}"