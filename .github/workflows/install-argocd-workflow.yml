name: Install Argo CD

on:
  workflow_dispatch:

jobs:
  install:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_ACCESS_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: gke-gcloud-auth-plugin

      - name: Configure gcloud and kubectl
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud container clusters get-credentials gke-cluster --zone us-central1-f --project ${{ secrets.GCP_PROJECT_ID }}
          kubectl config set-context --current --namespace=default
          kubectl config set clusters.gke_${{ secrets.GCP_PROJECT_ID }}_us-central1-f_gke-cluster.auth-provider.config.cmd-args "config config-helper --format=json"
          kubectl config set clusters.gke_${{ secrets.GCP_PROJECT_ID }}_us-central1-f_gke-cluster.auth-provider.config.cmd-path "$(which gke-gcloud-auth-plugin)"
          kubectl config set clusters.gke_${{ secrets.GCP_PROJECT_ID }}_us-central1-f_gke-cluster.auth-provider.config.'expiry-key' '{.credential.token_expiry}'
          kubectl config set clusters.gke_${{ secrets.GCP_PROJECT_ID }}_us-central1-f_gke-cluster.auth-provider.config.'token-key' '{.credential.access_token}'
          kubectl config set users.gke_${{ secrets.GCP_PROJECT_ID }}_us-central1-f_gke-cluster.auth-provider.name "gcp"

      - name: Add Argo Helm repository
        run: helm repo add argo https://argoproj.github.io/argo-helm

      - name: Install Argo CD
        run: |
          helm install argocd argo/argo-cd \
            --namespace argocd \
            --create-namespace \
            --wait --timeout 600s \
            --version "5.16.0" \
            --set server.extraArgs[0]="--insecure" \
            --set server.image.repository=argoproj/argocd \
            --set server.image.tag=v2.9.3

      - name: Get Argo CD initial admin password
        id: get_password
        run: |
          PASSWORD=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)
          echo "password=$PASSWORD" >> "$GITHUB_OUTPUT"
    
      - name: Output Argo CD Password
        run: |
          password=${{ steps.get_password.outputs.password }}
          echo "Argo CD initial admin password: $password"