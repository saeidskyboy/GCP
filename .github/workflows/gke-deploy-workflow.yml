name: Deploy GKE Cluster

on:
  push:
    branches:
      - "main"
#     paths:
#       - 'TerraformOnGCP/GKE/**'
#   pull_request:
#     paths:
#       - 'TerraformOnGCP/GKE/**'

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    defaults:
        run:
            shell: bash
            working-directory: ./TerraformOnGCP/GKE

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        env:
            GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

  # Check if the cluster exists
      - name: Check Cluster Existence
        id: check_cluster
        run: |
          CLUSTER_NAME=$(terraform output -raw cluster_name)
          CLUSTER_REGION=$(terraform output -raw cluster_region)
          if gcloud container clusters describe "$CLUSTER_NAME" --region "$CLUSTER_REGION" --format="value(name)" &> /dev/null; then
            echo "Cluster already exists."
            echo "cluster_exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "Cluster does not exist."
            echo "cluster_exists=false" >> "$GITHUB_OUTPUT"
          fi
        continue-on-error: true # Important: Continue even if describe fails (e.g., first run)


      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform configuration
        run: terraform apply -auto-approve

      - name: Test kubectl Access After Creation  # ADDED FOR TESTING
        if: (github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch') && steps.check_cluster.outputs.cluster_exists != 'true'
        run: |
          gcloud container clusters get-credentials $(terraform output -raw cluster_name) --region $(terraform output -raw cluster_region) --project ${{ secrets.GCP_PROJECT_ID }}
          kubectl get ns